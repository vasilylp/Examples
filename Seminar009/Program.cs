// Задача 60. ...Сформируйте трёхмерный массив из неповторяющихся двузначных чисел. 
// Напишите программу, которая будет построчно выводить массив, добавляя индексы каждого элемента.
// Массив размером 2 x 2 x 2
// 66(0,0,0) 25(0,1,0)
// 34(1,0,0) 41(1,1,0)
// 27(0,0,1) 90(0,1,1)
// 26(1,0,1) 55(1,1,1)
//--------------------------------Решение------------------------------------------------------
// //----------------------1.Генерируем неповторяющиеся двузначные числа--------------------------
// int GenerateUniqueNumber()
// {
//               HashSet<int> numbers = new HashSet<int>();
//               Random rand = new Random();
//               while (true)
//               {
//                             int n = rand.Next(10, 100);
//                             if (!numbers.Contains(n))
//                             {
//                                           numbers.Add(n);
//                                           return n;
//                             }
//               }
// }



// //-----------------2.Создаем трехмерный массив неповторяющихся чисел--------------------------------

// int[,,] CreateMatrix(int x, int y, int z)
// {
//               int[,,] matrixZ = new int[x, y, z];
//               for (int i = 0; i < x; i++)
//               {
//                             for (int j = 0; j < y; j++)
//                             {
//                                           for (int k = 0; k < z; k++)
//                                           {
//                                                         matrixZ[i, j, k] = GenerateUniqueNumber();
//                                           }

//                             }
//               }
//               return matrixZ;

// }
// //---------------------3.Печатаем созданный массив с индексами каждого элемента ----------------

// void PrintMatrix(int[,,] matrixZ)
// {
//               System.Console.WriteLine($"Массив размером: {matrixZ.GetLength(0)} x {matrixZ.GetLength(1)} x {matrixZ.GetLength(2)}");
//               for (int k = 0; k < matrixZ.GetLength(2); k++)
//               {
//                             for (int i = 0; i < matrixZ.GetLength(0); i++)
//                             {
//                                           System.Console.WriteLine();
//                                           for (int j = 0; j < matrixZ.GetLength(1); j++)
//                                           {
//                                                         System.Console.Write($"{matrixZ[i, j, k]} ({i},{j},{k}) ");
//                                           }

//                             }
//                             System.Console.WriteLine();
//               }
// }

// //------------------------------Вызов методов --------------------------------------------

// int[,,] matrZ = CreateMatrix(3, 2, 3);
// PrintMatrix(matrZ);
// System.Console.WriteLine();
//====================================================================================
// Задача 63: Задайте значение N. Напишите программу, которая выведет 
// все натуральные числа в промежутке от 1 до N.
// N = 5 -> "1, 2, 3, 4, 5"
// N = 6 -> "1, 2, 3, 4, 5, 6"
//-----------------------------------------------------------------------

// void Recursion(int number)
// {
//               if (number > 1)
//               {
//                             Recursion(number - 1);
//               }
//               System.Console.WriteLine(number);
// }

// Recursion(3);

// Задача 65: Задайте значения M и N. Напишите программу, 
// которая выведет все натуральные числа в промежутке от M до N.
// M = 1; N = 5 -> "1, 2, 3, 4, 5"
// M = 4; N = 8 -> "4, 6, 7, 8"
// void Recursion(int number1, int number2)
// {
//               if (number2 > number1)
//               {
//                             Recursion(number1,number2 - 1);
//               }
//               System.Console.WriteLine(number2);
// }

// Recursion(4,8);
//-------------------------------------------------------------------------
// Задача 67: Напишите программу, которая будет принимать
//  на вход число и возвращать сумму его цифр.
// 453 -> 12
// 45 -> 9
//----------------------------------------------------------------------
//  int Recursion(int number)
// {
//               if (number== 0)
//               {
//                            return 0;
//               }
//               return number%10 + Recursion(number/10);
// }

// int number = 453;
// System.Console.WriteLine(Recursion(number));
//================================================================================
// Задача 69: Напишите программу, которая на вход принимает два числа A и B,
//  и возводит число А в целую степень B с помощью рекурсии.
// A = 3; B = 5 -> 243 (3⁵)
// A = 2; B = 3 -> 8
//---------------------------------------------------------------------------------
// int Recursion(int number1, int number2)
// {
//               if (number2 > 1)
//               return number1 * Recursion(number1,number2 - 1);
//               return number1;  
// }      
// //--------------------------------------------------------------
// System.Console.WriteLine(Recursion(3,5));
// //-----------------------------------------------------------------
// int FuncRecursion(int num, int i)
// {
//     if (i > 0)
//     {
//         return num * FuncRecursion(num, i - 1);
//     }
//     return 1;
// }
// System.Console.WriteLine(FuncRecursion(3,5));

//------------------------------------------------------------------------------
// Напишите программу вычисления функции Аккермана с помощью рекурсии.
// Даны два неотрицательных числа m и n. 
// m = 2, n = 3 -> A(m,n) = 2
//--------------------------------------------------ДЗ-------------------------
// Задача 68: Напишите программу вычисления функции Аккермана с помощью рекурсии. 
//Даны два неотрицательных числа m и n.
// m = 2, n = 3 -> A(m,n) = 9
// m = 3, n = 2 -> A(m,n) = 29

int Akerman(int m, int n)
{
    if (m == 0)
    {
        return n+1;
    }
    if (m > 0 && n ==0)
    {
        return Akerman(m-1,1);
    }
    if (m > 0 && n > 0)
    {
        return Akerman(m-1, Akerman(m, n -1));
    }
    return 0;    
}

int n = Akerman(3, 2);
System.Console.WriteLine(n);